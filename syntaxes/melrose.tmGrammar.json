{
    "scopeName": "source.melrose",
    "patterns": [{
        "include": "#expression"
    }],
    "repository": {
        "expression": {
            "patterns": [{
                    "include": "#letter"
                },
                {
                    "include": "#paren-expression"
                },
                {
                    "include": "#comments"
                },
                {
                    "include": "#constant"
                },
                {
                    "include": "#number"
                },
                {
                    "include": "#string"
                }
            ]
        },
        "letter": {
            "match": "biab|sequence|progression|onbar|at|play|repeat|bpm|flatten|end|next|joinmap|record|scale|random|undynamic|parallel|channel|interval|octavemap|join|replace|sequencemap|notemap|notemerge|duration|loop|pitch|octave|beats|midi|note|go|bars|reverse|serial|begin|chord|echo",
            "name": "keyword.letter"
        },
        "paren-expression": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.paren.open"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.paren.close"
                }
            },
            "name": "expression.group",
            "patterns": [{
                "include": "#expression"
            }]
        },
        "comments": {
            "patterns": [{
                "captures": {
                    "1": {
                        "name": "punctuation.definition.comment.json"
                    }
                },
                "match": "(//).*$\\n?",
                "name": "comment.line.double-slash.js"
            }]
        },
        "constant": {
            "match": "\\b(?:true|false|nil)\\b",
            "name": "constant.language.melrose"
        },
        "number": {
            "match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
            "name": "constant.numeric.json"
        },
        "string": {
            "begin": "'",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.melrose"
                }
            },
            "end": "'",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.melrose"
                }
            },
            "name": "string.quoted.double.melrose"
        }
    }
}